name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
          
      # - name: Run tests
      #   run: |
      #     pytest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
          
      - name: Build and Push Docker Image
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/comma-ai:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/comma-ai:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker stop comma-ai || true
            docker rm comma-ai || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/comma-ai:latest
            docker run -d --name comma-ai -p 5000:5000 \
              -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
              -e GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }} \
              -e GOOGLE_SEARCH_ENGINE_ID=${{ secrets.GOOGLE_SEARCH_ENGINE_ID }} \
              -e NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }} \
              -e NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }} \
              -e SECRET_KEY=${{ secrets.SECRET_KEY }} \
              -e KAKAO_API_KEY=${{ secrets.KAKAO_API_KEY }} \
              -e EXHIBITION_API_KEY=${{ secrets.EXHIBITION_API_KEY }} \
            ${{ secrets.DOCKER_USERNAME }}/comma-ai:latest
        
            docker image prune -a -f